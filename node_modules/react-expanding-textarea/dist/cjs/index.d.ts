import React, { ChangeEvent, RefObject, TextareaHTMLAttributes } from 'react';
export interface GetHeight {
    (rows: number, el: HTMLTextAreaElement): number;
}
export declare const getHeight: GetHeight;
export interface Resize {
    (rows: number, el: HTMLTextAreaElement | null): void;
}
export declare const resize: Resize;
declare type RefFn = (node: HTMLTextAreaElement) => void;
export interface TextareaProps extends Omit<TextareaHTMLAttributes<HTMLTextAreaElement>, 'rows'> {
    forwardedRef?: RefObject<HTMLTextAreaElement> | RefFn;
    onChange?: (evt: ChangeEvent<HTMLTextAreaElement>) => void;
    onInput?: (evt: ChangeEvent<HTMLTextAreaElement>) => void;
    rows?: string | number | undefined;
    value?: string;
}
declare const _default: React.ForwardRefExoticComponent<TextareaProps & React.RefAttributes<unknown>>;
export default _default;
